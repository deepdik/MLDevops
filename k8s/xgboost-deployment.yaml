apiVersion: v1
kind: Namespace
metadata:
  name: xgboost-serving
---
apiVersion: machinelearning.seldon.io/v1
kind: SeldonDeployment
metadata:
  name: xgboost-model
  namespace: xgboost-serving
spec:
  name: xgboost-predictor
  protocol: seldon
  transport: rest
  replicas: 2
  predictors:
  - name: default
    replicas: 2
    graph:
      name: xgboost-model
      type: MODEL
      modelUri: s3://xgboost-ops-models/models/xgboost_model_latest.json
      envSecretRefName: seldon-init-container-secret
    componentSpecs:
    - spec:
        containers:
        - name: xgboost-model
          image: seldonio/xgboost:1.8.0
          ports:
          - containerPort: 9000
            name: http
          - containerPort: 9001
            name: grpc
          env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: aws-access-key-id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws-credentials
                key: aws-secret-access-key
          - name: AWS_DEFAULT_REGION
            value: "us-east-2"
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 60
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: xgboost-model-service
  namespace: xgboost-serving
spec:
  selector:
    seldon-app: xgboost-predictor-default-0
  ports:
  - name: http
    port: 80
    targetPort: 8000
  - name: grpc
    port: 9000
    targetPort: 9001
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: xgboost-model-ingress
  namespace: xgboost-serving
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/healthcheck-path: "/health/ready"
    alb.ingress.kubernetes.io/healthcheck-port: "8000"
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: xgboost-model-service
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: aws-credentials
  namespace: xgboost-serving
type: Opaque
data:
  aws-access-key-id: <base64-encoded-access-key>
  aws-secret-access-key: <base64-encoded-secret-key>
---
apiVersion: v1
kind: Secret
metadata:
  name: seldon-init-container-secret
  namespace: xgboost-serving
type: Opaque
data:
  AWS_ACCESS_KEY_ID: <base64-encoded-access-key>
  AWS_SECRET_ACCESS_KEY: <base64-encoded-secret-key>
  AWS_DEFAULT_REGION: dXMtZWFzdC0y 