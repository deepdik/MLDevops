apiVersion: batch/v1
kind: CronJob
metadata:
  name: xgboost-scheduled-automation
  namespace: kubeflow
  labels:
    app: xgboost-automation
    type: scheduled-training
spec:
  schedule: "*/30 * * * *"  # Run every 30 minutes
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: xgboost-automation
            type: scheduled-training
        spec:
          containers:
          - name: xgboost-scheduled-automation
            image: python:3.9-slim
            command: ["bash", "-c"]
            args:
            - |
              echo "🤖 Starting Scheduled XGBoost Automation..."
              echo "📅 Scheduled run at: $(date)"
              echo "⏰ This runs automatically every 30 minutes!"
              
              # Install packages
              pip install xgboost scikit-learn pandas numpy
              
              # Quick training demo
              python -c "
              import numpy as np
              import pandas as pd
              import xgboost as xgb
              from sklearn.model_selection import train_test_split
              from sklearn.metrics import r2_score
              import os
              
              print('🚀 Quick XGBoost Training Demo...')
              
              # Generate data
              np.random.seed(int(np.random.randint(1, 1000)))
              n_samples = 500
              n_features = 3
              
              X = np.random.randn(n_samples, n_features)
              coefficients = np.random.randn(n_features) * 0.5
              y = np.dot(X, coefficients) + np.random.normal(0, 0.1, n_samples)
              
              # Train model
              X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
              model = xgb.XGBRegressor(n_estimators=50, max_depth=4, random_state=42)
              model.fit(X_train, y_train)
              
              # Evaluate
              y_pred = model.predict(X_test)
              r2 = r2_score(y_test, y_pred)
              
              print(f'✅ Model trained! R²: {r2:.4f}')
              print(f'📊 Training samples: {len(X_train)}')
              print(f'📊 Test samples: {len(X_test)}')
              print(f'🎯 Features used: {n_features}')
              "
              
              echo "🎉 Scheduled automation completed!"
              echo "⏰ Next run in 30 minutes..."
              echo "📊 This demonstrates continuous automation!"
          restartPolicy: OnFailure 